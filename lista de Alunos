#include <stdio.h>
#include <string.h>

typedef struct {
    char nome[50];
    float nota;
    int matricula;
} Aluno;

void trocar(Aluno *a, Aluno *b) {
    Aluno temp = *a;
    *a = *b;
    *b = temp;
}

void heapify(Aluno alunos[], int n, int i, int (*compara)(Aluno, Aluno)) {
    int maior = i;
    int esquerda = 2 * i + 1;
    int direita = 2 * i + 2;

    if (esquerda < n && compara(alunos[esquerda], alunos[maior]) > 0)
        maior = esquerda;

    if (direita < n && compara(alunos[direita], alunos[maior]) > 0)
        maior = direita;

    if (maior != i) {
        trocar(&alunos[i], &alunos[maior]);
        heapify(alunos, n, maior, compara);
    }
}

void heapSort(Aluno alunos[], int n, int (*compara)(Aluno, Aluno)) {
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(alunos, n, i, compara);

    for (int i = n - 1; i > 0; i--) {
        trocar(&alunos[0], &alunos[i]);
        heapify(alunos, i, 0, compara);
    }
}

int compararPorNota(Aluno a, Aluno b) {
    return (a.nota > b.nota) - (a.nota < b.nota);
}

int compararPorMatricula(Aluno a, Aluno b) {
    return a.matricula - b.matricula;
}

int compararPorNome(Aluno a, Aluno b) {
    return strcmp(a.nome, b.nome);
}

void imprimirAlunos(Aluno alunos[], int tamanho) {
    for (int i = 0; i < tamanho; i++) {
        printf("Nome: %s, Nota: %.2f, Matrícula: %d\n", alunos[i].nome, alunos[i].nota, alunos[i].matricula);
    }
}

int main() {
    Aluno alunos[] = {
        {"Pedro", 0.5, 23200313},
        {"Vitão", 3.2, 23101026},
        {"Carlos", 7.8, 2022002},
        {"Beatriz", 8.9, 2022004}
    };
    int tamanho = sizeof(alunos) / sizeof(alunos[0]);

    printf("----------------------------------------------\n");
    printf("Ordenado por nota:\n");
    heapSort(alunos, tamanho, compararPorNota);
    imprimirAlunos(alunos, tamanho);

    printf("----------------------------------------------\n");

    printf("\nOrdenado por matrícula:\n");
    heapSort(alunos, tamanho, compararPorMatricula);
    imprimirAlunos(alunos, tamanho);

    printf("----------------------------------------------\n");

    printf("\nOrdenado por nome:\n");
    heapSort(alunos, tamanho, compararPorNome);
    imprimirAlunos(alunos, tamanho);
    printf("----------------------------------------------\n");

    
    return 0;
}
